= PML v{{{ pml_meta.pml_version }}} Tags Reference
:author: Tristano Ajmone
:email: <tajmone@gmail.com>
:revdate: {{{ pml_meta.pml_release_date }}}
:revnumber: {{{ pml_meta.pml_version }}}
:version-label: PML
:lang: en
:doctype: article
// TOC Settings:
:toclevels: 5
:toc: left
// Sections Numbering:
:partnums:
:sectnums:
:sectnumlevels: 2
// Cross References:
:idprefix:
:xrefstyle: full
:chapter-refsig: Ch.
:section-refsig: Sec.
:appendix-refsig: App.
// Misc Settings:
:experimental: true
:icons: font
:linkattrs: true
:reproducible: true
:sectanchors:

// Preamble
// ========

An autogenerated reference document on PML nodes/tags, useful for developers of PML syntaxes for editors and code highlighters.

This document was auto-generated via custom mustache templates at:

* https://github.com/tajmone/pml-playground/tree/main/mustache


== Tags Lists

=== All Tags

This is the full list of all PML nodes, alphabetically sorted.

// tag::list-tags-all[]

{{#pml_meta.nodes}}
* `{{{ id }}}`
{{/pml_meta.nodes}}

// end::list-tags-all[]


=== Block Nodes Tags

List of all block-type nodes.

// tag::list-block-node-tags[]

{{#pml_meta.nodes}}
{{^is_inline_type}}
* `{{{ id }}}`
{{/is_inline_type}}
{{/pml_meta.nodes}}

// end::list-block-node-tags[]


=== Inline Nodes Tags

List of all inline-type nodes.

// tag::list-inline-node-tags[]

{{#pml_meta.nodes}}
{{#is_inline_type}}
* `{{{ id }}}`
{{/is_inline_type}}
{{/pml_meta.nodes}}

// end::list-inline-node-tags[]


=== Nodes w/ Children

PML nodes that allow children nodes within themselves.

// tag::list-nodes-with-children[]

{{#pml_meta.nodes}}
{{#child_nodes_allowed}}
* `{{{ id }}}`
{{/child_nodes_allowed}}
{{/pml_meta.nodes}}

// end::list-nodes-with-children[]


=== Childless Nodes

PML nodes that _don't_ allow children nodes within themselves (useful info for Lenient Parsing).

// tag::list-nodes-childless[]

{{#pml_meta.nodes}}
{{^child_nodes_allowed}}
* `{{{ id }}}`
{{/child_nodes_allowed}}
{{/pml_meta.nodes}}

// end::list-nodes-childless[]


=== Raw Text Block-Nodes

Raw PML nodes are not parsed any further, so they can't contain sub-nodes and their contents are treated as verbatim text.

// tag::list-nodes-raw-text-block[]

{{#pml_meta.nodes}}
{{#is_raw_text_block}}
* `{{{ id }}}`
{{/is_raw_text_block}}
{{/pml_meta.nodes}}

// end::list-nodes-raw-text-block[]


== Tags Table

// tag::table-nodes-info[]

:child: https://www.pml-lang.dev/docs/user_manual/index.html#ch__4[child?^, title="Child nodes allowed?"]
:html: https://www.pml-lang.dev/docs/user_manual/index.html#HTML_attributes[html?^, title="HTML Attributes allowed?"]

[[table-nodes-info]]
.PML Nodes Info
[cols="3*<d,3*^d,<m",options=autowidth]
|=============================================================================
| node | tag | type | raw? | {child} | {html} | attributes

{{#pml_meta.nodes}}

| {{{ latest_doc_url }}}[{{ title }}^] | `{{{ id }}}`
| {{{type}}}
| {{#is_raw_text_block}}&check;{{/is_raw_text_block}}{{^is_raw_text_block}}&cross;{{/is_raw_text_block}}
| {{#child_nodes_allowed}}&check;{{/child_nodes_allowed}}{{^child_nodes_allowed}}&cross;{{/child_nodes_allowed}}
| {{#HTML_attributes_allowed}}&check;{{/HTML_attributes_allowed}}{{^HTML_attributes_allowed}}&cross;{{/HTML_attributes_allowed}}
|{{^attributes}}&cross;{{/attributes}}
{{#attributes}}  {{{ id }}} +
{{/attributes}}
{{/pml_meta.nodes}}
|=============================================================================

// end::table-nodes-info[]
